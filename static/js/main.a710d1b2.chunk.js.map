{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PLACES","name","zip","WeatherDisplay","state","weatherData","this","props","fetch","then","res","json","setState","weather","iconUrl","icon","main","src","alt","description","temp","temp_max","temp_min","wind","speed","Component","App","activePlace","className","map","place","index","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAIMA,EAAS,CACb,CAAEC,KAAM,YAAaC,IAAK,SAC1B,CAAED,KAAM,WAAYC,IAAK,SACzB,CAAED,KAAM,aAAcC,IAAK,SAC3B,CAAED,KAAM,WAAYC,IAAK,UAGrBC,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,YAAa,MAHH,E,qDAMd,WAAqB,IAAD,OACZH,EAAMI,KAAKC,MAAML,IAIvBM,MAHY,oDACVN,EACA,0DACSO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GACtC,EAAKC,SAAS,CAAEP,YAAaM,S,oBAGjC,WACE,IAAMN,EAAcC,KAAKF,MAAMC,YAC/B,IAAKA,EAAa,OAAO,0CACzB,IAAMQ,EAAUR,EAAYQ,QAAQ,GAC9BC,EAAU,mCAAqCD,EAAQE,KAAO,OACpE,OACE,gCACE,+BACGF,EAAQG,KADX,OACqBX,EAAYJ,KAC/B,qBAAKgB,IAAKH,EAASI,IAAKb,EAAYc,iBAEtC,0CAAad,EAAYW,KAAKI,KAA9B,UACA,uCAAUf,EAAYW,KAAKK,SAA3B,UACA,sCAAShB,EAAYW,KAAKM,SAA1B,UACA,6CAAgBjB,EAAYkB,KAAKC,MAAjC,mB,GA9BqBC,aA+DdC,E,kDA1Bb,aAAe,IAAD,8BACZ,gBACKtB,MAAQ,CACXuB,YAAa,GAHH,E,0CAMd,WAAU,IAAD,OACDA,EAAcrB,KAAKF,MAAMuB,YAC/B,OACE,sBAAKC,UAAU,MAAf,UACG5B,EAAO6B,KAAI,SAACC,EAAOC,GAAR,OACV,wBAEEC,QAAS,WACP,EAAKpB,SAAS,CAAEe,YAAaI,KAHjC,SAMGD,EAAM7B,MALF8B,MAQT,cAAC,EAAD,CAAkC7B,IAAKF,EAAO2B,GAAazB,KAAtCyB,U,GArBXF,aCnCHQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a710d1b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n// import 'bootstrap/dist/css/bootstrap.css';\n\nconst PLACES = [\n  { name: \"Palo Alto\", zip: \"94303\" },\n  { name: \"San Jose\", zip: \"94088\" },\n  { name: \"Santa Cruz\", zip: \"95062\" },\n  { name: \"Honolulu\", zip: \"96803\" }\n];\n\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n  componentDidMount() {\n    const zip = this.props.zip;\n    const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" +\n      zip +\n      \"&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=imperial\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({ weatherData: json });\n    });\n  }\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return <div>Loading</div>;\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return (\n      <div>\n        <h1>\n          {weather.main} in {weatherData.name}\n          <img src={iconUrl} alt={weatherData.description} />\n        </h1>\n        <p>Current: {weatherData.main.temp}°</p>\n        <p>High: {weatherData.main.temp_max}°</p>\n        <p>Low: {weatherData.main.temp_min}°</p>\n        <p>Wind Speed: {weatherData.wind.speed} mi/hr</p>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activePlace: 0\n    };\n  }\n  render() {\n    const activePlace = this.state.activePlace;\n    return (\n      <div className=\"App\">\n        {PLACES.map((place, index) => (\n          <button\n            key={index}\n            onClick={() => {\n              this.setState({ activePlace: index });\n            }}\n          >\n            {place.name}\n          </button>\n        ))}\n        <WeatherDisplay key={activePlace} zip={PLACES[activePlace].zip} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}